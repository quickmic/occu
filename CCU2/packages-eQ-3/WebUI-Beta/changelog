-----------------
ReGaHss ChangeLog
-----------------

2019-04-29 Jens Maus <mail@jens-maus.de>

  * fixed another minor timer module issue where during winter->summer dst
    change a periodic timer could have been executed twice with the same
    begin time. In addition, even timers outside the start/stop times of
    the dst change were incorrectly executed.

2019-04-25 Jens Maus <mail@jens-maus.de>

  * fixed another issue in the begin time calculation of period
    timers which could result in unexpected segfaults under certain
    conditions.

2019-04-24 Jens Maus <mail@jens-maus.de>

  * the history buffer size can now be specified/modified using
    rega.conf by specifying a HistoryBufferSize setting.

2019-04-17 Jens Maus <mail@jens-maus.de>

  * implemented new system.SunAzimuth() and system.SunAltitude() script
    functions which will return the current sun position in degrees
    relative to the current position and time.

2019-04-12 Jens Maus <mail@jens-maus.de>

  * integrated another time module fix where upon startup all periodic
    timers fired a single time even though their time didn't match the
    actual time they should fire.

2019-04-11 Jens Maus <mail@jens-maus.de>

  * moved scheduler thread startup to be started earlier so that timer
    evaluations can be performed more early.
  * fixed minor bug where in case a system variable was connected to
    a channel this reference wasn't cleared correctly upon removal of
    the channel/device (https://homematic-forum.de/forum/viewtopic.php?f=31&t=50077)

2019-04-10 Jens Maus <mail@jens-maus.de>

  * removed 'Server' HTTP response header to prevent any detailed web
    server system type analyses.

2019-04-02 Jens Maus <mail@jens-maus.de>

  * fixed bug in the astro day/night calculation routines where on a DST
    switch day from midnight till the switch time and incorrect sunrise
    or sunset time was returned.
  * add timestamp to console output and take care that output is properly
    synchronized.

#### R1.00.0388.0206 (occu: XXXXXXX) Release ##############################

2019-03-21 Jens Maus <mail@jens-maus.de>

  * fixed DST/non-DST switching issues in timer module which could have
    resulted in a segfault if a time interval over the DST switching
    time was created by a user.

2019-03-18 Jens Maus <mail@jens-maus.de>

  * implemented a new sunrise/sunset calculation routine which
    is fully compatible to the way sunrise/sunset is calculated
    on other homematic devices (e.g. access point, cloud service).
    Now sunset/sunrise times should exactly match the times
    calculated throughout all homematic devices/services.

2019-03-14 Jens Maus <mail@jens-maus.de>

  * fixed some compiler warnings and reduced probability of
    potential buffer overflows in certain situations.

#### R1.00.0388.0205 (occu: XXXXXXX) Release ##############################

2019-03-13 Jens Maus <mail@jens-maus.de>

  * replace more buffer overflow prone function uses with buffer
    overflow safe variants which should catch some known issues
    in the handling of large http requests.

2019-03-04 Jens Maus <mail@jens-maus.de>

  * fixed bug in session clearance where a logout didn't completly
    invalidate all session relevant information.
  * improved login security by preventing unauthorized users from
    logging into WebUI and using the scripting engine at all.
  * optimized logging output in various areas so that bug reports can
    be more easily tracked down. Also changed some messages that were
    previously flagged as "error" messages to be flagged as "warnings"
    only now that we have that additional category.

2019-03-01 Jens Maus <mail@jens-maus.de>

  * fixed minor bug where for interfaces with an empty URL the init method
    was still tried to be executed.

2019-02-28 Jens Maus <mail@jens-maus.de>

  * added possibility to log warnings instead of just error messages to
    syslog & co. This should help to better differentiate between real
    problems and warning messages that are just pure informational
    messages.

#### R1.00.0388.0204 (occu: 9fff131) Release ##############################

2018-12-08 Jens Maus <mail@jens-maus.de>

  * fixed string backslash unescaping routines to correctly unescape
    double backslash uses and thus allow to define e.g. \t by using
    a "\\t" string which were not possible before.

2018-12-07 Jens Maus <mail@jens-maus.de>

  * implemented missing 'break' and 'continue' statements to break out
    of while() and foreach() loops and to also continue with the next
    iteration like this is commonly performed in other script languages.
    This refs https://github.com/jens-maus/RaspberryMatic/issues/224

2018-12-06 Jens Maus <mail@jens-maus.de>

  * fixed bug where elseif() within a while/foreach() loop didn't work as
    expected but was quiting the loop too early.
    This fixes https://github.com/jens-maus/RaspberryMatic/issues/404

2018-12-05 Jens Maus <mail@jens-maus.de>

  * fixed webserver to only create and reserve a session ID in case a
    successfull user login is performed (either manual or autologin). This
    should prevent from Denial-of-Service (DoS) situations where certain
    internal service could send multiple web requests to identify if
    a http server is running and thus could eat up all available session
    slots ending up in "Zu viele gleichzeitige Verbindungen" errors.

    NOTE: This change requires that the file /www/rega/index.htm will
          contain a small change so that "SessionId" is not a mandatory
          variable anymore.

2018-11-27 Jens Maus <mail@jens-maus.de>

  * fixed http response to manage more than 800kb of response payload so
    that the internal web server of ReGaHss can manage way larger http
    response data. This should finally allow to, e.g. serve larger
    system variables http displays at Settings -> Systemvariables with
    e.g. ~1k of system variables or with longer device list web pages.

#### R1.00.0388.0203 (occu: c751df5) Release ##############################

2018-11-11 Jens Maus <mail@jens-maus.de>

  * upon loading the interfaces on startup non-existing interfaces are
    now flagged invalid by wiping the URL parameter so that xmlrpc calls
    to still existing devices of these non-existing interfaces are returned
    immediately instead of potentially resulting in long timeouts in trying
    to contact these interfaces.

2018-11-07 Jens Maus <mail@jens-maus.de>

  * fixed bug which caused a double execution of State() events on HSSdp
    device objects.

#### R1.00.0388.0202 (occu: 35bcf30) Release ##############################

2018-10-28 Jens Maus <mail@jens-maus.de>

  * more fixes for maintaining more than 65k objects in ReGaHss.

#### R1.00.0388.0201 (occu: 17ef669) Release ##############################

2018-10-26 Jens Maus <mail@jens-maus.de>

  * fixed certain issues related to the 65k object boundary change.

#### R1.00.0388.0200 (occu: 6e4dbdb) Release ##############################

2018-09-27 Jens Maus <mail@jens-maus.de>

  * fixed bug in .State() call on HSSdp objects which always returned false.
    This fixes https://github.com/jens-maus/RaspberryMatic/issues/367

2018-09-25 Jens Maus <mail@jens-maus.de>

  * implemented SortByName() for IseIdArray type which will allow to sort an
    idarray by the names of the objects being part of the array. It will return
    true if the sort operation succeded and false if not.
  * fixed "CENTRAL:0" PONG xmlrpc warnings by ignoring PONG events to "CENTRAL"
    in general. Also switched the unknown HSSDevice messages to info rather
    than always logging as an error.

2018-08-20 Jens Maus <mail@jens-maus.de>

  * implemented SHA512-based password storage with automatic conversion of
    old encoded user passwords once a successfull login had been processed.

2018-08-20 Jens Maus <mail@jens-maus.de>

  * applied changes to raise the limit for the maximum number of objects from
    2^16 to 2^31 so that we can support way larger installations in future.

2018-09-25 Jens Maus <mail@jens-maus.de>

  * fixed "CENTRAL:0" PONG xmlrpc warnings by ignoring PONG events to "CENTRAL"
    in general. Also switched the unknown HSSDevice messages to info rather
    than always logging as an error.

#### BETA29-2018-08-25 (occu: 3f8bb8d) Release ##############################

2018-08-05 Jens Maus <mail@jens-maus.de>

  * fixed use of "&" with system.Exec() to background executions which
    sometimes resulted in stalled zombie processes.

2018-08-04 Jens Maus <mail@jens-maus.de>

  * fixed incorrect "Failed to close mutex" error outputs when the mutex
    destroy operation returned EBUSY.

2018-07-17 Jens Maus <mail@jens-maus.de>

  * don't allow incorrect uses of Variable() which potentially may invalidate
    important information. Instead we output a warning of the incorrect use
    and suggest alternative functions to be used.

2018-05-28 Jens Maus <mail@jens-maus.de>

  * we use dynamic string arrays all over the place now. This finally removes
    all obsolete string boundaries regarding text length. This e.g. enables to
    use large texts in DPInfo(), etc.
  * removed 49 character workaround which tried to solve problems with
    truncated object names that old legacy versions of ReGaHss created and
    thus object name comparisons with the full name started to fail in newer
    ReGaHss versions.

#### BETA28-2018-02-27 (f1178dc) Release ####################################

2018-02-27 Jens Maus <mail@jens-maus.de>

  * optimized system.Exec() to avoid creating zombie processes in case
    background execution using "&" is used.

#### BETA27-2018-01-14 (440f8d6) Release ####################################

2017-12-26 Jens Maus <mail@jens-maus.de>

  * added "incorrect use" warnings for use of Device() on DP objects and
    LastTimestamp() and LastTimestampSeconds() on channel objects similar to
    the already existing warning on incorrect use of AlDestMap().
  * added automatic variable stack enlargement which should allow to deal with
    way more variables on the script execution stack than before.

2017-12-18 Jens Maus <mail@jens-maus.de>

  * added default charset encoding "iso-8859-1" to all xmlrpc responses so 
    that clients should have additional information to decode xmlrpc responses
    correctly.

#### BETA26-2017-12-09 (b3bc9eb) Release ####################################

2017-12-08 Jens Maus <mail@jens-maus.de>

  * added minimum of 5k for globally modifying the number of Iterations using
    system.MaxIterations(max)

#### BETA25-2017-12-04 (518321a) Release ####################################

2017-12-03 Jens Maus <mail@jens-maus.de>

  * added system.MaxIterations(max) method which allows to modify the maximum
    number of iterations for while()/foreach() loops. Calling this method
    with 0 will result in while()/foreach() to loop indefinitly. Calling it
    with -1 will restore the default of 500000 iterations.
  * removed all ID_XXXXX_MAX_COUNT entries from the public symbolic constant
    table were they didn't belong to.

2017-11-24 Jens Maus <mail@jens-maus.de>

  * fixed bug where invalid objects in the shared user object list required
    multiple restarts to completly cleanup the list.

#### BETA24-2017-11-14 (7338722) Release ####################################

2017-11-14 Jens Maus <mail@jens-maus.de>

  * fixed bug where deleting an object didn't remove it from the shared
    user objects list. Also added an automatic cleanup routine upon loading
    the regadom which will remove all invalid object ids in the shared user
    objects list.

2017-11-09 Jens Maus <mail@jens-maus.de>

  * fixed bug where using ToTime() on a time object and Filename() on a xml
    object returned incorrect results.

#### BETA23-2017-11-07 (705d243) Release ####################################

2017-11-06 Jens Maus <mail@jens-maus.de>

  * fixed more DST related bugs in the time module which could result in
    various different issues at DST borders.

2017-11-03 Jens Maus <mail@jens-maus.de>

  * modified error output to be more verbose when assigning incompatible 
    data to a system variable of a different type.

#### BETA22-2017-11-03 (9f7bc6c) Release ####################################

2017-11-01 Jens Maus <mail@jens-maus.de>

  * fixed bug where on a DST switching date the internal time module crashed
    ReGaHss because internal time calculation routines couldn't deal with
    DST borders.

2017-10-11 Jens Maus <mail@jens-maus.de>

  * added warning output if the maximum number of iterations for while() and
    foreach() use has been reached. This should make it easier to reveal
    situations where while()/foreach() uses show strange results because of
    the max iteration limitation. Also increased the maximum iterations to
    500000 because this also only takes a few seconds to be processed and
    shouldn't block the ReGa too long.

#### BETA21-2017-10-01 (469725b) Release ####################################

2017-09-23 Jens Maus <mail@jens-maus.de>

  * modified ToString(p) output for floating point values to be limited to the
    documented maximum precision of 15 digits. Otherwise an output of a float
    with higher precision might lead to some confusion.
  * modified floating point comparison epsilon to DBL_EPSILON to be consistent
    with the documented floating point precision (15 digits).

2017-09-22 Jens Maus <mail@jens-maus.de>

  * modified == and < comparison operators to use an epsilon-based comparison
    if applied on a float value comparison. This should make script-based
    comparisons compatible to the same way webui-based programs perform their
    comparisons.
  * modified .Trunc() to output the same truncated float value like
    .ToInteger(). Only if Trunc(p) is used with an additional parameter p
    the float value will be truncated to the p-th digit based on the
    real float value.
  * integrated an additional parameter for .ToInteger(p) when being used on
    float values. If specified, the truncation operation will be based on
    the result of ToString(p) with the precision p.
  * modified .ToInteger() to truncate a float value based on the same rounding
    operation like .ToString(). This should make uses of x.ToString().ToInteger()
    consistent with direct uses of x.ToInteger() again.
  * modified ToString() to output floating point values rounded to the sixth
    digit again.

2017-09-20 Jens Maus <mail@jens-maus.de>

  * fixed bug where ToString(p) on an empty string delivered a wrong output.
  * fixed bug where value list and binary-type system variables couldn't be
    set from programs anymore.
  * fixed bug where char-based system variables couldn't be emptied anymore.

2017-09-16 Jens Maus <mail@jens-maus.de>

  * fixed another bug with using elseif() which resulted in ScriptRuntimeError
    outputs even thought all conditions where checked and executed correctly.

#### BETA20-2017-09-13 (330c383) Release ####################################

2017-09-11 Jens Maus <mail@jens-maus.de>

  * fixed a bug in the web request response generation which supplied invalid
    xml formatted data for hm scripts containing string variables with special
    characters like '<' or '>'. Now these special characters are properly
    escaped so that valid xml data is returned and thus won't result in, e.g.
    JSON formatting errors if the script test window is used in the WebUI.

2017-09-10 Jens Maus <mail@jens-maus.de>

  * fixed a problen where due to implicit BINRPC definitions in how floating
    point values are supplied, some sensors reported slightly inaccurate float
    values (e.g. dimmers) resulting in various numeric problems. Now a proper
    float point rounding method is applied that maintains float values to be 
    keep accuracy up to the sixth digit.

2017-09-09 Jens Maus <mail@jens-maus.de>

  * fixed a bug in using multiple elseif() statements in a row which resulted
    in multiple executions of the alternative branches.

2017-09-08 Jens Maus <mail@jens-maus.de>

  * fixed a regression bug which were the reason for "CompatibleForCompare"
    errors on programs using dimmer devices in program conditions.

2017-09-07 Jens Maus <mail@jens-maus.de>

  * fixed problem that upon changing the value type (integer, float, string)
    of ISE values after a program was already created using, e.g. system
    variables or devices returning value in a certain type that ReGaHss
    aborted program execution by issuing "CompatibleForCompare" errors. Now
    it will try to convert to the desired type first and only issue this error
    if a conversion is also not possible.
  * fixed floating point to string conversion routines (e.g. ToString()) to not
    use any floating point rounding but truncate values after the 6th digit
    so that output e.g. using WriteLine() is somewhat more consisent and
    human comparable to the real values.

2017-09-06 Jens Maus <mail@jens-maus.de>

  * fixed inconsistent rounding operations when using ToString(p) with an
    optional parameter to specify the precision in case it is used on real
    or string variables containing a floating point value.

#### BETA19-2017-08-31 (821f393) Release ####################################

2017-08-31 Jens Maus <mail@jens-maus.de>

  * fixed the XmlRpcDataType to variable conversion to always perform an
    integer conversion in case the xmlrpc call returns an integer rather
    than potentially performing a conversion to byte which might result
    in incorrect values in variables.

2017-08-29 Jens Maus <mail@jens-maus.de>

  * reworked HTTPServer startup to allow more than 10 parallel HTTP server
    worker threads to be running at the same time.
  * added all missing "ID_XXXXXX" type identifiers for constant ise id
    objects and datapoints. This includes ID_GW_SYSALARM, ID_GW_SYSSERVICE
    to retrieve the object id for alarm and service messages.
  * reworked system.Exec() to execute the supplied command in the context of
    a full shell rather than calling the command directly. This enables
    system.Exec() to execute commands with more than 9 arguments and to use
    complex shell syntax (such as shell pipes "|", redirections ">" and ";"
    to execute more than one command). Furthermore, errors on command
    execution should be reported and handled more properly now.

2017-08-26 Jens Maus <mail@jens-maus.de>

  * the method .ToString(p) can now also be used on a string-type variable to
    round a floating point type string to a specified precision p. If a
    string, however, contains non integer/float characters a .ToString(p)
    call will just return the unmodified string.

#### BETA18-2017-08-26 (f5fddc6) Release ####################################

2017-08-25 Jens Maus <mail@jens-maus.de>

  * implemented "HttpListenerMaxConnections" rega.conf config option to be
    able to raise the default number of 6 parallel http connections.

#### BETA17-2017-08-08 (d5ff468) Release ####################################

2017-08-07 Jens Maus <mail@jens-maus.de>

  * fixed bug where using escaping control characters strings like "\t"
    caused a syntax error if specified as an argument to a method.

2017-08-05 Jens Maus <mail@jens-maus.de>

  * renamed all internal "SINGLECOND" identifiert to "SINGLECONDITION" for
    consistency reasons.
  * added the following missing symbol constants: OT_CALENDARDPS,
    OT_INTERFACES, OT_RULE, OT_RULES, OT_SINGLECONDITION, OT_DESTINATION,
    OT_SINGLEDESTINATION
  * renamed method "RulePRogramID" to "RuleProgramID" to fix typo.

#### BETA16-2017-08-04 (029f1ee) Release ####################################

2017-08-03 Jens Maus <mail@jens-maus.de>

  * implemented an "elseif" token which can be used in complex if/else
    statements so that code obfuscation can be reduced by using "elseif()"
    rather than "else { if() }".
  * added new .Replace(s, d) string method which can be used to search
    for a substring 's' and replace it with 'd' in a string variable.

2017-08-02 Jens Maus <mail@jens-maus.de>

  * added new .StartsWith(s) and .EndsWith(s) string methods which return
    true or false depending on the supplied substring.
  * added new .Contains(s) method which returns true/false if a string
    contains the supplied substring s.
  * added new .Trim(c), .LTrim(c) and .RTrim(c) to trim whitespaces
    from strings either from left+right, left or just right. By specifying
    an optional character string "c" the stripable characters can be
    specified.
  * added new .ToUpper() and .ToLower() method that allow to convert a
    string variable to its uppercase or lowercase representation.
  * added new .ToUTF8() and .ToLatin() methods that allow to convert
    a string variable to/from UTF8 from/to Latin (ISO-8859-15).
  * added new .UriEncode() and .UriDecode() methods that will encode and
    decode a string variable to/from a URI conform way (%XX encoding).

2017-08-01 Jens Maus <mail@jens-maus.de>

  * fixed enum type list to output proper enum type names for all internally
    known enum types.
  * fixed some incorrect naming of "CalendarDPs" enum type which was named
    "ClendarDPs".
  * fixed inconsistent output of .EnumTypeName() use on unknown enum types.

2017-07-31 Jens Maus <mail@jens-maus.de>

  * fixed '+' operator to respect data type ordering when an addition
    contained a string.
  * fixed a bug where saving a script program via WebUI could take
    considerable time if the script program reached a certain amount.

#### BETA15-2017-07-11 (5dc7736) - 2.29.18 Release ##########################

2017-07-07 Jens Maus <mail@jens-maus.de>

  * fixed a bug in the signal handler management which was potentially broken
    and might resulted in unexpected terminations of ReGaHss.
  * fixed bug where object names were always trunctaed to 49 characters so
    that GetObject() calls with the full object name didn't match.

#### BETA14-2017-06-03 (8eb738a) Release ####################################

2017-06-01 Jens Maus <mail@jens-maus.de>

  * added some verbose error output to more easily identify incorrect uses
    of foreach()/while() expressions.

#### BETA13-2017-05-30 (07cb86d) Release ####################################

2017-05-30 Jens Maus <mail@jens-maus.de>

  * general code cleanup by having increased the compiler warning level.
  * reworked class constructors to initialize member variables in the correct
    order so that no compiler warnings are generated anymore.

#### BETA12-2017-05-29 (2fc2389) Release ####################################

2017-05-29 Jens Maus <mail@jens-maus.de>

  * slightly reworked internal script function management to manage function
    in a more secure way.

2017-05-28 Jens Maus <mail@jens-maus.de>

  * output just filename and line number on each Error syslog output rather
    the full path and line number in brackets where users thought this might
    be the error id.

2017-05-27 Jens Maus <mail@jens-maus.de>

  * fixed bug where a dom.GetObject() with a string starting with a number
    always returned the object with the number the string started. Thus,
    dom.GetObject("2Test") always returned the root object instead of trying
    to search for an object with that particular string.
  * fixed using LastTimestamp() and LastTimestampSeconds() on channel
    objects like this had been possible.

2017-05-26 Jens Maus <mail@jens-maus.de>

  * using VarType() and Type() on an uninitialized 'idarray' doesn't end up
    in a ScriptRuntimeError anymore and should return valid results now.

#### BETA11-2017-05-24 (8349dc1) Release ####################################

2017-05-24 Jens Maus <mail@jens-maus.de>

  * fixed bug in syslog output function where in case an output contained
    typeical format specifiers (e.g. '%s') could result in segmentation
    faults.

2017-05-23 Jens Maus <mail@jens-maus.de>

  * fixed another regression bug where calling .Device() on a HSSDP resulted
    in a ScriptRuntimeError.

#### BETA10-2017-05-22 (334e81f) Release ####################################

2017-05-22 Jens Maus <mail@jens-maus.de>

  * fixed a regression bug which caused that obj.HssType() was not working
    properly anymore in a generic case. This resulted in incorrectly displaying
    temperatures in the WebUI with wind directions.

2017-05-21 Jens Maus <mail@jens-maus.de>

  * fixed system.Exec() function to be able to be executed without any
    parameters without interrupting a script execution.
  * fixed typo of "ID_GW_CHANNEL" constant

2017-05-19 Jens Maus <mail@jens-maus.de>

  * added a workaround for a commonly but incorrectly use of .AlDestMapDP() on
    an AlTriggerDP() acquired object so that only a warning is issued without
    stopping script execution. In future, however, we should and will remove
    this workaround again.
  * fixed a regression bug with .Variable() not having worked anymore after
    the recent opcode fixes.

#### BETA9-2017-05-18 (8d2e2bb) Release #####################################

2017-05-18 Jens Maus <mail@jens-maus.de>

  * fixed all problems with function name clashes. E.g. the use of
    o.ToInteger() and o.BuildLabel() on a valid object 'o' returned the
    same 'string' result even though ToInteger() isn't a valid/accepted
    function of an object. Something like this was possible at many
    places resulting in unwanted side effects. Now a proper
    ScriptRuntimeError is issued instead so that script authors can
    correct these errors.

2017-05-17 Jens Maus <mail@jens-maus.de>

  * fixed a bug where Type() and VarType() was not available for all
    possible variable types. Now 'var', 'idarray' and 'object' can also
    be queried for their types. Note, however, that for actual objects
    only VarType() will be unique since Type() will then return the
    actual object type instead of the variable type name.
  * fixed a bug in while() and foreach() not raising any error if the
    specified condition isn't valid.
  * increased maximum number of iterations for foreach()/while() to 50000
    to facilitate our current hardware setup.
  * fixed /bin/hm_startup process to wait a certain amount of time for the
    rega engine to start up. Otherwise errors might occur during startup.
  * added Type(), VarType() and ToString() to idarray vartype
  * fixed a regression bug which caused that session ids were not correctly
    calculated on a CCU2

2017-05-16 Jens Maus <mail@jens-maus.de>

  * added missing optional 'long_press' parameter to xmlrpc.ActivateLinkParamset().
  * fixed all xmlrpc namespace calls to correctly check for mandatory and
    optional parameters so that future calls to the rfd XMLRPC interface won't
    end up in random crashes.

2017-05-15 Jens Maus <mail@jens-maus.de>

  * fixed bug where calling xmlrpc.ActivateLinkParamset() with only two
    arguments resulted in a crashing rfd. Now ReGa will perform some parameter
    checks before executing the XMLRPC call.

#### BETA8-2017-05-12 (b98358d) Release #####################################

2017-05-11 Jens Maus <mail@jens-maus.de>

  * fixed some false thread termination error output when terminating
    ReGaHss
  * fixed bug in script parser where lines starting only with "!" resulted in
    commenting out the whole next line as well.
  * modified script runtime error output to display the famous '11622' debug
    messages as a 'info' log output instead and added a second normal 'error'
    output which outputs the reason for the error in a more human readable
    form with the complete code attached so that the buggy code can more easily
    be identified.
  * implemented the following random number generator functions to be usable
    within a rega script
      system.Random(min, max) - outputs a random integer number between min<>max
                                or a general random number without specifying
                                min/max
      system.Srandom(val)     - Allows to seed the random number generator to
                                a specific value or without 'val' to a random
                                value

2017-05-10 Jens Maus <mail@jens-maus.de>

  * added certain math constants to support math operations
      M_E        - e          - 2.71828182845904523536
      M_LOG2E    - log2(e)    - 1.44269504088896340736
      M_LOG10E   - log10(e)   - 0.434294481903251827651
      M_LN2      - ln(2)      - 0.693147180559945309417
      M_LN10     - ln(10)     - 2.30258509299404568402
      M_PI       - pi         - 3.14159265358979323846
      M_PI_2     - pi/2       - 1.57079632679489661923
      M_PI_4     - pi/4       - 0.785398163397448309616
      M_1_PI     - 1/pi       - 0.318309886183790671538
      M_2_PI     - 2/pi       - 0.636619772367581343076
      M_2_SQRTPI - 2/sqrt(pi) - 1.12837916709551257390
      M_SQRT2    - sqrt(2)    - 1.41421356237309504880
      M_SQRT1_2  - 1/sqrt(2)  - 0.707106781186547524401
  * fixed ToInteger() to correctly truncate real values
  * fixed '+' operator to be also used for concatinating a string with
    an integer or real value similar to how '#' is doing this
  * implemented some basic math functions which can now be used within a
    rega script for integer and floating-point variables
      Abs()    - compute the absolute value of an integer
      Mod(y)   - floating-point remainder function
      Min(y)   - determine minimum of two floating-point numbers
      Max(y)   - determine maximum of two floating-point numbers
      Exp()    - base-e exponential function
      Exp2()   - base-2 exponential function
      Exp10()  - base-10 exponential function
      Expm1()  - exponential minus 1
      Log()    - natural logarithmic function
      Log2()   - base-2 logarithmic function
      Log10()  - base-10 logarithmic function
      Log1p()  - logarithm of 1 plus argument
      Sqrt()   - square root function
      Cbrt()   - cube root function
      Pow(y)   - power function
      Sin()    - sine function
      Cos()    - cosine function
      Tan()    - tangent function
      Asin()   - arc sine function
      Acos()   - arc cosine function
      Atan()   - arc tangent function
      Sinh()   - hyperbolic sine function
      Cosh()   - hyperbolic cosine function
      Tanh()   - hyperbolic tangent function
      Asinh()  - inverse hyperbolic sine function
      Acosh()  - inverse hyperbolic cosine function
      Atanh()  - inverse hyperbolic tangent function
      Ceil()   - ceiling function, smallest integral value not less than argument
      Floor()  - largest integral value not greater than argument
      Trunc(p) - round to integer, toward zero with precision p
      Round(p) - round to nearest value, away from zero with precision p

#### BETA7-2017-04-26 (9d4b309) Release #####################################

2017-04-26 Jens Maus <mail@jens-maus.de>

  * modified all uses of string operating functions to use their buffer
    overflow/underflow safe variants instead. 
  * fixed incorrect deallocations of certain array-type variables.

#### BETA6-2017-04-24 (2ad8401) Release #####################################

2017-04-24 Jens Maus <mail@jens-maus.de>

  * PONG events received will now be properly ignored without issuing an error.
    This should fix https://github.com/eq-3/occu/issues/44
  * added "AutoSaveDomOnExit" rega.conf option to allow to force a DOM config
    save upon termination (disabled per default).

#### BETA5-2017-04-09 (b89342f) Release #####################################

2017-04-09 Jens Maus <mail@jens-maus.de>

  * fixed a another timer related regession bug which caused that daily timers
    resulted in bogus timer executions once a daily timer was executed.

#### BETA4-2017-04-07 (65eed4a) Release #####################################

2017-04-06 Jens Maus <mail@jens-maus.de>

  * added "AutoSaveDOMCycle" and "CheckModifiedCycle" rega.conf config options
    and restored the old default value of 12h and 10min.
  * added "SessionMaxCount" config option to rega.conf to allow to raise max.
    HTTP session limit.
  * modified command-line usage output to display version and build date.
  * fixed another timer related bug which was caused because two threads were
    fighting for the same data and suddenly overwrote data of the other thread.
    Now a mutex protects use of some public methods, thus should synchronize
    access properly.

#### BETA3-2017-04-05 (7f6cd65) Release #####################################

2017-04-05 Jens Maus <mail@jens-maus.de>

  * fixed a bug in the time_t conversion routines which didn't convert DST
    vs. non-DST conversions correct and overly complicated.
    This was the reason for certain DST/non-DST related issues and also
    the reason for not formatting certain dates correctly in HM scripts
    (see https://homematic-forum.de/forum/viewtopic.php?f=34&t=34439)

2017-04-04 Jens Maus <mail@jens-maus.de>

  * replaced all localtime() and gmtime() uses with their reentrant
    versions localtime_r() and gmtime_r(). This should hopefully finally
    fix all the strange timer related issues with short timers (< minutes)
    which was caused by localtime/gmtime using internal buffers, thus old
    struct tm values were used ending up in certain runtime problems.
  * modified config AutoSave to force a save of the configuration every 60
    minutes instead of 12h. Also switched the modified config check to
    check every 5 minutes if the config had been changed and then
    immediately saving it. Furthermore, switched the autosave at
    termination of ReGaHss to the modified check thread instead.

2017-04-03 Jens Maus <mail@jens-maus.de>

  * removed artifical max size for string variables. Now a string can have
    an arbitrary length like c strings. This allowed to enlarge the size
    of rega script programs to be edited which was previously limited to
    100KiB. Now an arbitrary long script can be added as a HM script.
  * fixed a minor but severe bug in the Timer management which caused
    that especially short timers (~ seconds) suddenly stopped because
    the end of day information pointed to 1970-01-01 and thus cancelled
    further timer executions. Further long term tests have to show,
    however, if all timer related problems are really solved by this fix.

2017-03-30 Jens Maus <mail@jens-maus.de>

  * added missing data skipping upon termination to all relevant code
    passages. This fixes the "invalid free()" segmentation faults upon
    termination of ReGaHss which was caused because ReGaHss was trying to
    free memory of static instance data. Now ReGaHss can be properly
    terminated while freeing memory properly.

2017-03-29 Jens Maus <mail@jens-maus.de>

  * fixed bug where upon termination of ReGaHss the current DOM config were
    not saved. Now the AutoSave thread will be properly signaled to close its
    operation while saving the current config before shutting down.
    This should fix issues where changed settings were lost if the system had
    been reset immediately after the change.
  * fixed the limitation of 200 ReGa script variables per variable list by having
    implemented a dynamic resize operation which in theory allows an
    unlimited number of variables now.

2017-03-28 Jens Maus <mail@jens-maus.de>

  * fixed certain invalid memset() calls potentially caused unwanted crashed.

2017-03-23 Jens Maus <mail@jens-maus.de>

  * created top-level Makefile

2017-02-12 Jens Maus <mail@jens-maus.de>

  * restructuring project directory
  * initial commit
